@Composable
fun VolumeControl(
    modifier: Modifier = Modifier
) {
    var volume by rememberSaveable { mutableFloatStateOf(0.3f) }

    val step = 0.05f
    val volumeRange = 0f..1f

    Row(
        verticalAlignment = Alignment.CenterVertically,
        modifier = modifier.padding(16.dp)
    ) {
        // Minus Button
        IconButton(
            onClick = {
                volume = (volume - step).coerceIn(volumeRange)
            }
        ) {
            Icon(Icons.Default.Remove, contentDescription = "Decrease Volume")
        }

        // Slider
        Slider(
            value = volume,
            onValueChange = { volume = it.coerceIn(volumeRange) },
            valueRange = volumeRange,
            modifier = Modifier
                .weight(1f)
                .padding(horizontal = 8.dp)
        )

        // Plus Button
        IconButton(
            onClick = {
                volume = (volume + step).coerceIn(volumeRange)
            }
        ) {
            Icon(Icons.Default.Add, contentDescription = "Increase Volume")
        }
    }
}