void mainImage(out vec4 fragColor, in vec2 fragCoord)
{
    // Normalized coordinates (0 to 1)
    vec2 uv = fragCoord / iResolution.xy;

    // Get transition progress (0 to 1)
    float t = mod(iTime, 3.0) / 3.0; // 3-second loop
    float progress = t < 0.5 ? 2.0 * t * t : -1.0 + (4.0 - 2.0 * t) * t;

    // Distortion offset to simulate refraction
    vec2 offset = vec2(
        sin(uv.y * 20.0 + iTime * 10.0) * 0.005,
        cos(uv.x * 20.0 + iTime * 10.0) * 0.005
    );

    vec2 distortedUV_A = uv + offset * (1.0 - progress);
    vec2 distortedUV_B = uv - offset * progress;

    // Sample two album covers from channels 0 and 1
    vec4 colorA = texture(iChannel0, distortedUV_A);
    vec4 colorB = texture(iChannel1, distortedUV_B);

    // Crossfade blend
    vec4 mixedColor = mix(colorA, colorB, progress);

    // Simulated blur (4-sample average)
    float blur = 0.005 * sin(progress * 3.1415);
    vec4 blurSample = (
        texture(iChannel0, uv + vec2(blur, 0.0)) +
        texture(iChannel0, uv - vec2(blur, 0.0)) +
        texture(iChannel1, uv + vec2(0.0, blur)) +
        texture(iChannel1, uv - vec2(0.0, blur))
    ) * 0.25;

    fragColor = mix(mixedColor, blurSample, 0.2 * (1.0 - abs(0.5 - progress) * 2.0));
}